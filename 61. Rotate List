# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def rotateRight(self, head: Optional[ListNode], k: int) -> Optional[ListNode]:
        l = head
        n = 0
        
        
        while l:
            l = l.next
            n += 1
        
      
        if n == 0 or k == 0:
            return head
        
        k = k % n 
        
       
        if k == 0:
            return head
        
        c = 0
        i = head
        
      
        while c < n - k - 1:
            c += 1
            i = i.next
        
       
        temp = i.next
        i.next = None
        
        
        i = temp
        while i.next:
            i = i.next
        
       
        i.next = head
        
        return temp
